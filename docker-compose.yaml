version: "3.8"

networks:
  backend:

services:
  core:
    container_name: digital-bookshelf-core
    image: digital-bookshelf-core
    depends_on:
#      - rabbitmq
      - postgres
      - minio
#      - filter
    build:
      context: .
    restart: no
    env_file:
      - .docker.env
    ports:
      - "8080:8080"
    networks:
      - backend

  postgres:
    container_name: digital-bookshelf-postgres
    image: postgres:13-alpine
    restart: on-failure
    env_file:
      - .docker.env
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/dbdata:/var/lib/postgresql/data
    networks:
      - backend

#  filter:
#    container_name: filter_container
#    image: brashram/filter_image
#    depends_on:
#      - rabbitmq
#      - postgres
#    restart: on-failure
#    env_file:
#      - .docker.env
#    ports:
#      - "8081:8081"
#    networks:
#      - backend
#
#  rabbitmq:
#    image: rabbitmq:3-management
#    restart: on-failure
#    environment:
#      - RABBITMQ_DEFAULT_USER=user
#      - RABBITMQ_DEFAULT_PASS=qwerty
#    volumes:
#      - ./volumes/rabbitmq:/var/lib/rabbitmq
#    env_file:
#      - .docker.env
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    networks:
#      - backend

  minio:
    image: minio/minio:latest
    container_name: digital-bookshelf-minio
    restart: on-failure
    env_file:
      - .docker.env
    command: server /minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - ./volumes/minio-data:/minio
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

#  typesense:
#    image: typesense/typesense:0.25.2
#    restart: on-failure
#    networks:
#      - backend
#    ports:
#      - "8108:8108"
#    volumes:
#      - ./volumes/typesense-data:/data
#    command: '--data-dir /data --api-key=somekey --enable-cors'
